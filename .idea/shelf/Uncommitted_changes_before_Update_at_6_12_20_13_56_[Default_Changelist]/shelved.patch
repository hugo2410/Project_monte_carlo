Index: Modules/MonteCarloExpectation.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 28/11/20.\n//\n\n\n#include \"MonteCarloExpectation.h\"\n#include \"AbstractVariable.h\"\n#include \"AbstractFunc.h\"\n\nMonteCarloExpectation ::MonteCarloExpectation() {}\nMonteCarloExpectation ::~MonteCarloExpectation(){}\n\nMonteCarloExpectation::MonteCarloExpectation( AbstractFunc *pFunction, const AbstractVariable *pRandom)\n{\n    userFunction = pFunction;\n    monteCarloExpectation = evaluateExpectation(pRandom);\n}\n\ndouble MonteCarloExpectation::evaluateExpectation( const AbstractVariable *pRandom) {\n    double sum = 0.;\n    double var = 0.;\n    for (int i = 0; i < pRandom->get_size(); ++i) {\n        sum += userFunction->evaluate(pRandom->get_vector()[i]);\n    }\n    return sum / pRandom->get_size();\n}\ndouble MonteCarloExpectation::computeMean( const AbstractVariable *pRandom){\n        double sum = 0.;\n        double var =0.;\n        for(int i=0;i<pRandom->get_size();++i){\n            sum += pRandom->get_vector()[i];\n        }\n        return sum/pRandom->get_size();\n}\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/MonteCarloExpectation.cpp	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/MonteCarloExpectation.cpp	(date 1607191332319)
@@ -26,7 +26,6 @@
 }
 double MonteCarloExpectation::computeMean( const AbstractVariable *pRandom){
         double sum = 0.;
-        double var =0.;
         for(int i=0;i<pRandom->get_size();++i){
             sum += pRandom->get_vector()[i];
         }
Index: Modules/StatisticalMoment.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 29/11/20.\n//\n\n#ifndef PROJECT_MONTE_CARLO_STATISTICALMOMENT_H\n#define PROJECT_MONTE_CARLO_STATISTICALMOMENT_H\n\n\n#include \"AbstractVariable.h\"\n\nclass StatisticalMoment {\npublic:\n    StatisticalMoment();\n\n    StatisticalMoment(AbstractVariable *pRandom);\n\n    ~StatisticalMoment();\n    void write_csv(const char* file,int order);\n\nprivate:\n    AbstractVariable *randomNumbers;\n\n};\n\n\n#endif //PROJECT_MONTE_CARLO_STATISTICALMOMENT_H\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/StatisticalMoment.h	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/StatisticalMoment.h	(date 1607191941102)
@@ -11,15 +11,11 @@
 class StatisticalMoment {
 public:
     StatisticalMoment();
-
-    StatisticalMoment(AbstractVariable *pRandom);
-
     ~StatisticalMoment();
+    StatisticalMoment(AbstractVariable *pRandom);
     void write_csv(const char* file,int order);
-
 private:
     AbstractVariable *randomNumbers;
-
 };
 
 
Index: Modules/NormalDist.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 26/11/20.\n//\n\n\n#include <iostream>\n#include \"NormalDist.h\"\n#include \"random\"\n\ndouble RationalApproximation(double t)\n{\n    // Abramowitz and Stegun formula 26.2.23.\n    // / The absolute value of the error should be less than 4.5 e-4.\ndouble c[] = {2.515517, 0.802853, 0.010328};\ndouble d[] = {1.432788, 0.189269, 0.001308};\nreturn t - ((c[2]*t + c[1])*t + c[0]) /\n(((d[2]*t + d[1])*t + d[0])*t + 1.0);\n}\n\ndouble NormalCDFInverse(double p)\n{\n    // See article above for explanation of this section.\n    if (p < 0.5)\n    {\n        // F^-1(p) = - G^-1(p)\n        return -RationalApproximation( sqrt(-2.0*log(p)) );\n    }\n    else\n    {\n        // F^-1(p) = G^-1(1-p)\n        return RationalApproximation( sqrt(-2.0*log(1-p)) );\n    }\n}\nfloat myErfInv2(float x){\n    float tt1, tt2, lnx, sgn;\n    sgn = (x < 0) ? -1.0f : 1.0f;\n\n    x = (1 - x)*(1 + x);        // x = 1 - x*x;\n    lnx = logf(x);\n\n    tt1 = 2/(3.14*0.147) + 0.5f * lnx;\n    tt2 = 1/(0.147) * lnx;\n\n    return(sgn*sqrtf(-tt1 + sqrtf(tt1*tt1 - tt2)));\n}\n\nNormalDist::NormalDist(){}\n\nNormalDist::NormalDist(const int N, const double mean, const double var):UniformDist(N)\n{\n    std::default_random_engine generator(std::random_device{}());\n    //std::default_random_engine generator;\n    std::normal_distribution<double> distribution(mean,sqrt(var));\n\n    for (int i =0;i < N; ++i )\n    {\n        //std::cout<<uniformSamples[i]<<std::endl;\n        //std::cout<<sqrt(2)*myErfInv2(2*uniformSamples[i]-1)<<std::endl;\n        normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);\n        //normalSamples.push_back(distribution(generator));\n    }\n\n}\nNormalDist::NormalDist(const int N): mean(0.0),var(1.0),initial_sample_size(N)\n{\n    std::default_random_engine generator;\n    std::normal_distribution<double> distribution(mean,sqrt(var));\n    for (int i =0;i < N; ++i )\n    {\n        normalSamples.push_back(distribution(generator));\n    }\n}\n\nvoid NormalDist::getMoreSamples(const int multiples){\n    for (int j = 0; j < multiples;++j){\n        for (int i = 0; i < initial_sample_size; ++i) {\n            normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);\n\n        }\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/NormalDist.cpp	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/NormalDist.cpp	(date 1607191899701)
@@ -7,30 +7,29 @@
 #include "NormalDist.h"
 #include "random"
 
-double RationalApproximation(double t)
-{
-    // Abramowitz and Stegun formula 26.2.23.
-    // / The absolute value of the error should be less than 4.5 e-4.
-double c[] = {2.515517, 0.802853, 0.010328};
-double d[] = {1.432788, 0.189269, 0.001308};
-return t - ((c[2]*t + c[1])*t + c[0]) /
-(((d[2]*t + d[1])*t + d[0])*t + 1.0);
-}
+
+
+
+NormalDist::NormalDist(){}
+
+float myErfInv2(float x);
 
-double NormalCDFInverse(double p)
+NormalDist::NormalDist(const int N, const double mean, const double var):UniformDist(N),mean(mean),var(var),initial_sample_size(N)
 {
-    // See article above for explanation of this section.
-    if (p < 0.5)
+    for (int i =0;i < N; ++i )
     {
-        // F^-1(p) = - G^-1(p)
-        return -RationalApproximation( sqrt(-2.0*log(p)) );
+        normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);
     }
-    else
+}
+
+NormalDist::NormalDist(const int N): mean(0.0),var(1.0),initial_sample_size(N)
+{
+    for (int i =0;i < N; ++i )
     {
-        // F^-1(p) = G^-1(1-p)
-        return RationalApproximation( sqrt(-2.0*log(1-p)) );
+        normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);
     }
 }
+
 float myErfInv2(float x){
     float tt1, tt2, lnx, sgn;
     sgn = (x < 0) ? -1.0f : 1.0f;
@@ -43,39 +42,3 @@
 
     return(sgn*sqrtf(-tt1 + sqrtf(tt1*tt1 - tt2)));
 }
-
-NormalDist::NormalDist(){}
-
-NormalDist::NormalDist(const int N, const double mean, const double var):UniformDist(N)
-{
-    std::default_random_engine generator(std::random_device{}());
-    //std::default_random_engine generator;
-    std::normal_distribution<double> distribution(mean,sqrt(var));
-
-    for (int i =0;i < N; ++i )
-    {
-        //std::cout<<uniformSamples[i]<<std::endl;
-        //std::cout<<sqrt(2)*myErfInv2(2*uniformSamples[i]-1)<<std::endl;
-        normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);
-        //normalSamples.push_back(distribution(generator));
-    }
-
-}
-NormalDist::NormalDist(const int N): mean(0.0),var(1.0),initial_sample_size(N)
-{
-    std::default_random_engine generator;
-    std::normal_distribution<double> distribution(mean,sqrt(var));
-    for (int i =0;i < N; ++i )
-    {
-        normalSamples.push_back(distribution(generator));
-    }
-}
-
-void NormalDist::getMoreSamples(const int multiples){
-    for (int j = 0; j < multiples;++j){
-        for (int i = 0; i < initial_sample_size; ++i) {
-            normalSamples.push_back(sqrt(var)*sqrt(2)*myErfInv2(2*uniformSamples[i]-1)+mean);
-
-        }
-    }
-}
Index: Modules/FunctReader.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 30/11/20.\n//\n\n#ifndef PROJECT_MONTE_CARLO_FUNCTREADER_H\n#define PROJECT_MONTE_CARLO_FUNCTREADER_H\n\n\n#include \"AbstractReader.h\"\n#include \"AbstractFunc.h\"\n\nclass FunctReader : public AbstractReader {\npublic:\n    FunctReader();\n    ~FunctReader();\n    void read_file(const char *file,AbstractVariable* &pRandomVariable) override;\n    void read_file(const char* file, AbstractFunc* &pFunction, int &order) override;\n};\n\n\n#endif //PROJECT_MONTE_CARLO_FUNCTREADER_H\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/FunctReader.h	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/FunctReader.h	(date 1607191523640)
@@ -12,7 +12,7 @@
 class FunctReader : public AbstractReader {
 public:
     FunctReader();
-    ~FunctReader();
+    ~FunctReader() ;
     void read_file(const char *file,AbstractVariable* &pRandomVariable) override;
     void read_file(const char* file, AbstractFunc* &pFunction, int &order) override;
 };
Index: Modules/AbstractVariable.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 26/11/20.\n//\n\n#ifndef PROJECT_MONTE_CARLO_ABSTRACTVARIABLE_H\n#define PROJECT_MONTE_CARLO_ABSTRACTVARIABLE_H\n\n#include <vector>\n\nclass AbstractVariable{\npublic:\n    //Return the sample\n    virtual std::vector<double> get_vector() const = 0;\n    virtual double get_mean() const = 0;\n    virtual double get_var() const = 0;\n    virtual int get_size() const =0;\n    virtual int get_initial_size() const =0 ;\n    //virtual void getMoreSamples(const int multiples) const = 0;\n};\n#endif //PROJECT_MONTE_CARLO_ABSTRACTVARIABLE_H\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/AbstractVariable.h	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/AbstractVariable.h	(date 1607191190862)
@@ -10,6 +10,9 @@
 class AbstractVariable{
 public:
     //Return the sample
+    AbstractVariable(){};
+
+    virtual ~AbstractVariable(){};
     virtual std::vector<double> get_vector() const = 0;
     virtual double get_mean() const = 0;
     virtual double get_var() const = 0;
Index: Modules/StatisticalMoment.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 29/11/20.\n//\n\n#include <tgmath.h>\n#include <fstream>\n#include \"StatisticalMoment.h\"\n#include \"AbstractVariable.h\"\n\nStatisticalMoment::StatisticalMoment(){};\nStatisticalMoment::~StatisticalMoment(){};\n\nStatisticalMoment::StatisticalMoment(AbstractVariable* pRandom) {\n    randomNumbers = pRandom;\n}\n\nvoid StatisticalMoment::write_csv(const char* file,int order){\n\n    std::ofstream outputFile;\n    outputFile.open(file);\n    outputFile.setf(std::ios::scientific);\n    double mean = randomNumbers->get_mean();\n    //order = 6 ? ou on le fixe avec l'utilisateur\n    outputFile << \"Order;Statistical Moment\\n\";\n    for(int i = 0; i < order ; ++i)\n    {\n        double sum = 0.;\n        for(auto sample :randomNumbers->get_vector())\n        {\n            sum += pow(sample-mean,i);\n        }\n        outputFile << i << \";\" << sum << \"\\n\";\n    }\n\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/StatisticalMoment.cpp	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/StatisticalMoment.cpp	(date 1607191295914)
@@ -20,7 +20,6 @@
     outputFile.open(file);
     outputFile.setf(std::ios::scientific);
     double mean = randomNumbers->get_mean();
-    //order = 6 ? ou on le fixe avec l'utilisateur
     outputFile << "Order;Statistical Moment\n";
     for(int i = 0; i < order ; ++i)
     {
@@ -29,7 +28,7 @@
         {
             sum += pow(sample-mean,i);
         }
-        outputFile << i << ";" << sum << "\n";
+        outputFile << i << ";" << sum/randomNumbers->get_size()<< "\n";
     }
 
 }
\ No newline at end of file
Index: main.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>/*!\n *\n * main.cpp\n *\n *  Created on: Nov 24, 2020\n * \t   Authors: Akeddar Mehdi <mehdi.akeddar@epfl.ch> &\n * \t            Birch Hugo <hugo.birchd@epfl.ch>\n */\n\n#include <iostream>\n#include <cstring>\n#include <string>\n#include <MonteCarloExpectation.h>\n#include <AbstractExpectation.h>\n#include <NormalDist.h>\n#include <StatisticalMoment.h>\n#include <FunctReader.h>\n#include <CentralLimitThm.h>\n\n#include \"AbstractReader.h\"\n#include \"AbstractFunc.h\"\n#include \"PolynomlFunc.h\"\n#include \"NormalReader.h\"\n#include \"UniformReader.h\"\n#include \"AbstractVariable.h\"\n#include \"Error.hpp\"\n\nusing namespace std;\n\nint main(int argc, char *argv[]) {\n\n    const char *file_name;\n    const char *function_file_name;\n    const char *dist_type;\n    AbstractVariable *pRandom = 0;\n    string file;\n    string input;\n    AbstractReader *pReader;\n    FunctReader *pFunReader;\n    AbstractFunc *pFunction ;\n    AbstractExpectation *pExpectation;\n    CentralLimitThm *pCThm;\n    int order;\n\n    if(argc == 4){\n\n        file_name = argv[1];\n        function_file_name = argv[2];\n        dist_type = argv[3];\n\n        pReader = new FunctReader;\n        pReader ->read_file(function_file_name,pFunction,order);\n\n        if( strcmp(dist_type , \"N\") == 0 ) {\n            pReader = new NormalReader;\n        }\n        else if(strcmp(dist_type , \"U\") == 0)\n                pReader = new UniformReader;\n        else{\n            string input;\n            cerr << \"Wrong distribution type. Please refer to README\" << endl;\n            cout << \"Please enter the of the two distribution types: [U/N] \" << endl;\n            cin >> input;\n\n            if (input == \"U\")\n                pReader = new UniformReader;\n            else if (input == \"N\")\n                pReader = new NormalReader;\n            else{\n                cerr << \"Input invalid !\" << endl;\n                return -1;\n            }\n        }\n    }\n    cout<< \"file = \"<< file_name<< endl;\n    try{\n        pReader->read_file(file_name,pRandom);\n    }catch(Error& e){\n        cerr << \"Exception thrown: \" << e.getErrorTag() << e.what() << endl;\n        return -1;\n    }\n    delete pReader;\n\n//////////////////////////////////////FUNCTION//////////////////////////////////////////////////\n\n    cout << \"Calulating Expectation\" << endl;\n    pExpectation = new MonteCarloExpectation(pFunction,pRandom);\n    cout << \"Expectation Calculated\" << endl;\n    cout << pExpectation->getExpectation() << endl;\n    //cout << pExpectation->evaluateExpectation(pRandom) << endl;\n    //////////////////////////////////////MOMENT//////////////////////////////////////////////////\n    StatisticalMoment *pMoment = new StatisticalMoment(pRandom);\n    pMoment->write_csv(\"moments.csv\",order);\n    cout << \"Moment written !\" << endl;\n\n    for (int i = 1; i <= 5; ++i)\n        pRandom = new NormalDist(i*pRandom->get_initial_size(),pRandom->get_mean(),pRandom->get_var());\n        pCThm = new CentralLimitThm();\n\n\n\n    return 0;\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- main.cpp	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ main.cpp	(date 1607191240422)
@@ -19,7 +19,6 @@
 
 #include "AbstractReader.h"
 #include "AbstractFunc.h"
-#include "PolynomlFunc.h"
 #include "NormalReader.h"
 #include "UniformReader.h"
 #include "AbstractVariable.h"
@@ -32,11 +31,11 @@
     const char *file_name;
     const char *function_file_name;
     const char *dist_type;
-    AbstractVariable *pRandom = 0;
+    AbstractVariable *pRandom = nullptr;
+    AbstractVariable *pRandomCTL = nullptr;
     string file;
     string input;
     AbstractReader *pReader;
-    FunctReader *pFunReader;
     AbstractFunc *pFunction ;
     AbstractExpectation *pExpectation;
     CentralLimitThm *pCThm;
@@ -47,7 +46,6 @@
         file_name = argv[1];
         function_file_name = argv[2];
         dist_type = argv[3];
-
         pReader = new FunctReader;
         pReader ->read_file(function_file_name,pFunction,order);
 
@@ -57,22 +55,15 @@
         else if(strcmp(dist_type , "U") == 0)
                 pReader = new UniformReader;
         else{
-            string input;
-            cerr << "Wrong distribution type. Please refer to README" << endl;
-            cout << "Please enter the of the two distribution types: [U/N] " << endl;
-            cin >> input;
-
-            if (input == "U")
-                pReader = new UniformReader;
-            else if (input == "N")
-                pReader = new NormalReader;
-            else{
-                cerr << "Input invalid !" << endl;
-                return -1;
-            }
-        }
+            cerr << "Missing Distribution Type. Please refer to README" << endl;
+            return -1;
+            }
+    }
+    else{
+        cerr << "Wrong program declaration. Please refer to README" << endl;
+        return -1;
+
     }
-    cout<< "file = "<< file_name<< endl;
     try{
         pReader->read_file(file_name,pRandom);
     }catch(Error& e){
@@ -82,22 +73,28 @@
     delete pReader;
 
 //////////////////////////////////////FUNCTION//////////////////////////////////////////////////
-
-    cout << "Calulating Expectation" << endl;
+    cout << "Compute Expectation" << endl;
     pExpectation = new MonteCarloExpectation(pFunction,pRandom);
     cout << "Expectation Calculated" << endl;
     cout << pExpectation->getExpectation() << endl;
-    //cout << pExpectation->evaluateExpectation(pRandom) << endl;
     //////////////////////////////////////MOMENT//////////////////////////////////////////////////
-    StatisticalMoment *pMoment = new StatisticalMoment(pRandom);
+    auto *pMoment = new StatisticalMoment(pRandom);
     pMoment->write_csv("moments.csv",order);
     cout << "Moment written !" << endl;
-
-    for (int i = 1; i <= 5; ++i)
-        pRandom = new NormalDist(i*pRandom->get_initial_size(),pRandom->get_mean(),pRandom->get_var());
-        pCThm = new CentralLimitThm();
-
-
+//////////////////////////////////////CTL//////////////////////////////////////////////////
+    cout << "Verifying Theorem !" << endl;
+    for(int j =1;j < 5;++j) {
+        pCThm = new CentralLimitThm(pRandom,j);
+        for (int i = 1; i <= 20; ++i) {
+            pRandomCTL = new NormalDist(j * pRandom->get_initial_size(), pRandom->get_mean(), pRandom->get_var());
+            pCThm->verify_thm(pRandomCTL, pExpectation);
+        }
+    }
+    cout << "Verification Over. Run Visualization !" << endl;
+    delete pRandomCTL;
+    delete pRandom;
+    delete pFunction;
+    delete pExpectation;
 
     return 0;
 }
\ No newline at end of file
Index: Modules/CentralLimitThm.h
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 3/12/20.\n//\n\n#ifndef PROJECT_MONTE_CARLO_CENTRALLIMITTHM_H\n#define PROJECT_MONTE_CARLO_CENTRALLIMITTHM_H\n\n\n#include \"AbstractVariable.h\"\n#include \"AbstractExpectation.h\"\n\nclass CentralLimitThm {\npublic:\n    CentralLimitThm();\n    virtual ~CentralLimitThm();\n    void verify_thm(AbstractVariable *pRandom,AbstractExpectation *pExpectation);\n\nprivate:\n    bool verified ;\n};\n\n\n#endif //PROJECT_MONTE_CARLO_CENTRALLIMITTHM_H\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/CentralLimitThm.h	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/CentralLimitThm.h	(date 1607183233794)
@@ -12,11 +12,13 @@
 class CentralLimitThm {
 public:
     CentralLimitThm();
-    virtual ~CentralLimitThm();
+    ~CentralLimitThm();
+    CentralLimitThm(AbstractVariable *pRandom,int multiples);
     void verify_thm(AbstractVariable *pRandom,AbstractExpectation *pExpectation);
 
 private:
-    bool verified ;
+    double true_mean ;
+    double true_var;
 };
 
 
Index: Modules/CentralLimitThm.cpp
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>//\n// Created by mehdi on 3/12/20.\n//\n\n#include <bits/ios_base.h>\n#include <fstream>\n#include \"CentralLimitThm.h\"\n\nvoid open_csv(std::string file, double theoritical_mean);\n\nvoid write_csv(double sample_mean);\n\nvoid verify_thm(AbstractVariable *pRandom,AbstractExpectation* pExpectation){\n    double theoritical_mean = pRandom->get_mean();\n    double theoritical_var = pRandom->get_var();\n    double sample_mean = 0 ;\n    open_csv(\"sample means\" + std::to_string(pRandom->get_size()), theoritical_mean);\n    for(int i = 0;i<1000;++i)\n    {\n        sample_mean = pExpectation->computeMean(pRandom);\n        write_csv(sample_mean);\n    }\n}\n\nvoid open_csv(const char* file, double theoritical_mean){\n\n    std::ofstream outputFile;\n    outputFile.open(file);\n    outputFile.setf(std::ios::scientific);\n    outputFile << \"Means of size of samples = \" << \"\\n\";\n    outputFile << theoritical_mean << \"\\n\";\n}\n\nvoid write_csv(double sample_mean){\n    outputFile << sample_mean << \"\\n\"\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- Modules/CentralLimitThm.cpp	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ Modules/CentralLimitThm.cpp	(date 1607188808974)
@@ -4,33 +4,40 @@
 
 #include <bits/ios_base.h>
 #include <fstream>
+#include <iostream>
 #include "CentralLimitThm.h"
 
-void open_csv(std::string file, double theoritical_mean);
+
+void open_csv(std::string file, double theoritical_mean, double theoritical_var);
+CentralLimitThm::CentralLimitThm(){}
 
-void write_csv(double sample_mean);
+CentralLimitThm::CentralLimitThm(AbstractVariable *pRandom, int multiples){
+    this->true_mean = pRandom->get_mean();
+    this ->true_var = pRandom->get_var();
+    std::string file_name = "sample_means_" + std::to_string(multiples*pRandom->get_size())+".csv";
+    open_csv(file_name, this->true_mean, this->true_var);
+}
 
-void verify_thm(AbstractVariable *pRandom,AbstractExpectation* pExpectation){
-    double theoritical_mean = pRandom->get_mean();
-    double theoritical_var = pRandom->get_var();
+void write_csv(std::string file,double sample_mean);
+
+void CentralLimitThm::verify_thm(AbstractVariable *pRandom,AbstractExpectation* pExpectation){
+
     double sample_mean = 0 ;
-    open_csv("sample means" + std::to_string(pRandom->get_size()), theoritical_mean);
-    for(int i = 0;i<1000;++i)
-    {
-        sample_mean = pExpectation->computeMean(pRandom);
-        write_csv(sample_mean);
-    }
+    std::string file_name = "sample_means_" + std::to_string(pRandom->get_size())+".csv";
+    sample_mean = pExpectation->computeMean(pRandom);
+    write_csv(file_name,sample_mean);
 }
 
-void open_csv(const char* file, double theoritical_mean){
+void open_csv(std::string file, double theoritical_mean, double theoritical_var){
 
     std::ofstream outputFile;
     outputFile.open(file);
-    outputFile.setf(std::ios::scientific);
-    outputFile << "Means of size of samples = " << "\n";
     outputFile << theoritical_mean << "\n";
+    outputFile << theoritical_var<< "\n";
 }
 
-void write_csv(double sample_mean){
-    outputFile << sample_mean << "\n"
+void write_csv(std::string file,double sample_mean){
+    std::ofstream outputFile;
+    outputFile.open(file, std::ofstream::app);
+    outputFile << sample_mean << "\n";
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"BranchesTreeState\">\n    <expand>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"LOCAL_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n      <path>\n        <item name=\"ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"REMOTE_ROOT\" type=\"e8cecc67:BranchNodeDescriptor\" />\n        <item name=\"GROUP_NODE:origin\" type=\"e8cecc67:BranchNodeDescriptor\" />\n      </path>\n    </expand>\n    <select />\n  </component>\n  <component name=\"CMakeRunConfigurationManager\" shouldGenerate=\"true\" shouldDeleteObsolete=\"true\">\n    <generated>\n      <config projectName=\"Project_Monte_carlo\" targetName=\"monte_carlo_run\" />\n      <config projectName=\"Project_Monte_carlo\" targetName=\"gtest_main\" />\n      <config projectName=\"Project_Monte_carlo\" targetName=\"gtest\" />\n      <config projectName=\"Project_Monte_carlo\" targetName=\"Modules\" />\n      <config projectName=\"Project_Monte_carlo\" targetName=\"Input_test\" />\n    </generated>\n  </component>\n  <component name=\"CMakeSettings\">\n    <configurations>\n      <configuration PROFILE_NAME=\"Debug\" CONFIG_NAME=\"Debug\" />\n    </configurations>\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"29280ede-bff2-4e7a-8182-6ac519fa5ecf\" name=\"Default Changelist\" comment=\"Function reader  + order set by user\">\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/AbstractExpectation.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/AbstractExpectation.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/AbstractVariable.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/AbstractVariable.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/CentralLimitThm.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/CentralLimitThm.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/MonteCarloExpectation.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/MonteCarloExpectation.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/MonteCarloExpectation.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/MonteCarloExpectation.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/NormalDist.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/NormalDist.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/NormalDist.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/NormalDist.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/UniformDist.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/UniformDist.cpp\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/Modules/UniformDist.h\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/Modules/UniformDist.h\" afterDir=\"false\" />\n      <change beforePath=\"$PROJECT_DIR$/main.cpp\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/main.cpp\" afterDir=\"false\" />\n    </list>\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"ClangdSettings\">\n    <option name=\"formatViaClangd\" value=\"false\" />\n  </component>\n  <component name=\"ExecutionTargetManager\" SELECTED_TARGET=\"CMakeBuildProfile:Debug\" />\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"CMakeLists.txt\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"OCResolveContextSettings\">\n    <option name=\"configuration\" value=\"0-Debug-Modules\" />\n  </component>\n  <component name=\"ProjectId\" id=\"1kk6lZRK0tzrcU0oPy5QrmrHntU\" />\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\n    <property name=\"WebServerToolWindowFactoryState\" value=\"false\" />\n    <property name=\"cf.first.check.clang-format\" value=\"false\" />\n    <property name=\"last_opened_file_path\" value=\"$PROJECT_DIR$/cmake-build-debug\" />\n    <property name=\"node.js.detected.package.eslint\" value=\"true\" />\n    <property name=\"node.js.detected.package.tslint\" value=\"true\" />\n    <property name=\"node.js.path.for.package.eslint\" value=\"project\" />\n    <property name=\"node.js.path.for.package.tslint\" value=\"project\" />\n    <property name=\"node.js.selected.package.eslint\" value=\"(autodetect)\" />\n    <property name=\"node.js.selected.package.tslint\" value=\"(autodetect)\" />\n    <property name=\"nodejs_package_manager_path\" value=\"npm\" />\n    <property name=\"settings.editor.selected.configurable\" value=\"terminal\" />\n  </component>\n  <component name=\"RecentsManager\">\n    <key name=\"CopyFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/cmake-build-debug\" />\n      <recent name=\"$PROJECT_DIR$\" />\n    </key>\n    <key name=\"MoveFile.RECENT_KEYS\">\n      <recent name=\"$PROJECT_DIR$/cmake-build-debug\" />\n    </key>\n  </component>\n  <component name=\"RunManager\" selected=\"CMake Application.monte_carlo_run\">\n    <configuration name=\"Input_test\" type=\"CMakeGoogleTestRunConfigurationType\" factoryName=\"Google Test\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Project_Monte_carlo\" TARGET_NAME=\"Input_test\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"Project_Monte_carlo\" RUN_TARGET_NAME=\"Input_test\" TEST_MODE=\"SUITE_TEST\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n        <option name=\"BeforeTestRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"Modules\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Project_Monte_carlo\" TARGET_NAME=\"Modules\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"gtest\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Project_Monte_carlo\" TARGET_NAME=\"gtest\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"gtest_main\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Project_Monte_carlo\" TARGET_NAME=\"gtest_main\" CONFIG_NAME=\"Debug\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"monte_carlo_run\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\" PROJECT_NAME=\"Project_Monte_carlo\" TARGET_NAME=\"monte_carlo_run\" CONFIG_NAME=\"Debug\" RUN_TARGET_PROJECT_NAME=\"Project_Monte_carlo\" RUN_TARGET_NAME=\"monte_carlo_run\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"test\" type=\"CMakeRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" WORKING_DIR=\"file://$PROJECT_DIR$\" PASS_PARENT_ENVS_2=\"true\" CONFIG_NAME=\"Debug\" RUN_PATH=\"$PROJECT_DIR$/cmake-build-debug/Test/basic_tests/Input_test\" EXPLICIT_BUILD_TARGET_NAME=\"all\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration default=\"true\" type=\"GradleAppRunConfiguration\" factoryName=\"Application\" REDIRECT_INPUT=\"false\" PASS_PARENT_ENVS_2=\"true\">\n      <method v=\"2\">\n        <option name=\"com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <list>\n      <item itemvalue=\"CMake Application.Modules\" />\n      <item itemvalue=\"CMake Application.gtest\" />\n      <item itemvalue=\"CMake Application.gtest_main\" />\n      <item itemvalue=\"CMake Application.monte_carlo_run\" />\n      <item itemvalue=\"CMake Application.test\" />\n      <item itemvalue=\"Google Test.Input_test\" />\n    </list>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"29280ede-bff2-4e7a-8182-6ac519fa5ecf\" name=\"Default Changelist\" comment=\"\" />\n      <created>1606232396522</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1606232396522</updated>\n      <workItem from=\"1606232400806\" duration=\"3663000\" />\n      <workItem from=\"1606238314808\" duration=\"63000\" />\n      <workItem from=\"1606323398421\" duration=\"3009000\" />\n      <workItem from=\"1606326886474\" duration=\"621000\" />\n      <workItem from=\"1606657266405\" duration=\"8690000\" />\n      <workItem from=\"1606723460518\" duration=\"3523000\" />\n      <workItem from=\"1606744125427\" duration=\"598000\" />\n      <workItem from=\"1606928897220\" duration=\"3212000\" />\n      <workItem from=\"1606993964012\" duration=\"11123000\" />\n      <workItem from=\"1607021362227\" duration=\"896000\" />\n      <workItem from=\"1607068909964\" duration=\"5106000\" />\n      <workItem from=\"1607174857880\" duration=\"4795000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Initial commit\">\n      <created>1606232472143</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606232472143</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Added folders and comments for doxygen\">\n      <created>1606238077384</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606238077384</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Added folders and comments for doxygen\">\n      <created>1606255202718</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606255202719</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Removed Hello world\">\n      <created>1606255269232</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606255269232</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"probleme prints\">\n      <created>1606326096253</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606326096254</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Cmake for boost\">\n      <created>1606586632631</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606586632631</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Cmake for boost update\">\n      <created>1606587463193</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606587463193</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"added test\">\n      <created>1606587614954</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606587614954</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Casser tout / Expectation noramelment ok\">\n      <created>1606600141173</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606600141173</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Moment done\">\n      <created>1606674437821</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606674437821</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Function reader  + order set by user\">\n      <created>1606931417118</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1606931417118</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"12\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <ignored-roots>\n      <path value=\"$PROJECT_DIR$/..\" />\n    </ignored-roots>\n    <MESSAGE value=\"Initial commit\" />\n    <MESSAGE value=\"Added folders and comments for doxygen\" />\n    <MESSAGE value=\"Removed Hello world\" />\n    <MESSAGE value=\"probleme prints\" />\n    <MESSAGE value=\"Cmake for boost\" />\n    <MESSAGE value=\"Cmake for boost update\" />\n    <MESSAGE value=\"added test\" />\n    <MESSAGE value=\"Casser tout / Expectation noramelment ok\" />\n    <MESSAGE value=\"Moment done\" />\n    <MESSAGE value=\"Function reader  + order set by user\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Function reader  + order set by user\" />\n  </component>\n  <component name=\"WindowStateProjectService\">\n    <state x=\"458\" y=\"162\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog\" timestamp=\"1606588203438\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"458\" y=\"162\" key=\"#com.intellij.execution.impl.EditConfigurationsDialog/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606588203438\" />\n    <state x=\"652\" y=\"354\" width=\"672\" height=\"396\" key=\"#com.intellij.fileTypes.FileTypeChooser\" timestamp=\"1606325198379\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"652\" y=\"354\" width=\"672\" height=\"396\" key=\"#com.intellij.fileTypes.FileTypeChooser/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606325198379\" />\n    <state x=\"726\" y=\"301\" width=\"524\" height=\"502\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog\" timestamp=\"1606325194378\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"726\" y=\"301\" width=\"524\" height=\"502\" key=\"#com.intellij.refactoring.safeDelete.UnsafeUsagesDialog/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606325194378\" />\n    <state x=\"536\" y=\"98\" width=\"916\" height=\"898\" key=\"CommitChangelistDialog2\" timestamp=\"1606238144394\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"536\" y=\"98\" width=\"916\" height=\"898\" key=\"CommitChangelistDialog2/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606238144394\" />\n    <state x=\"813\" y=\"311\" width=\"424\" height=\"496\" key=\"FileChooserDialogImpl\" timestamp=\"1606588201424\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"813\" y=\"311\" width=\"424\" height=\"496\" key=\"FileChooserDialogImpl/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606588201424\" />\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.bottom\" timestamp=\"1607073243640\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.bottom/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1607073243640\" />\n    <state width=\"1802\" height=\"256\" key=\"GridCell.Tab.0.bottom/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606596439592\" />\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.center\" timestamp=\"1607073243639\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.center/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1607073243639\" />\n    <state width=\"1802\" height=\"256\" key=\"GridCell.Tab.0.center/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606596439591\" />\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.left\" timestamp=\"1607073243638\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.left/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1607073243638\" />\n    <state width=\"1802\" height=\"256\" key=\"GridCell.Tab.0.left/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606596439591\" />\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.right\" timestamp=\"1607073243639\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"278\" key=\"GridCell.Tab.0.right/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1607073243639\" />\n    <state width=\"1802\" height=\"256\" key=\"GridCell.Tab.0.right/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606596439591\" />\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.bottom\" timestamp=\"1606326339704\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.bottom/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606326339704\" />\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.center\" timestamp=\"1606326339704\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.center/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606326339704\" />\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.left\" timestamp=\"1606326339704\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.left/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606326339704\" />\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.right\" timestamp=\"1606326339704\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state width=\"1807\" height=\"344\" key=\"GridCell.Tab.1.right/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606326339704\" />\n    <state x=\"519\" y=\"218\" width=\"1016\" height=\"742\" key=\"SettingsEditor\" timestamp=\"1606593961419\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"519\" y=\"218\" width=\"1016\" height=\"742\" key=\"SettingsEditor/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606593961419\" />\n    <state x=\"590\" y=\"262\" width=\"800\" height=\"528\" key=\"Vcs.Push.Dialog.v2\" timestamp=\"1606931427115\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"590\" y=\"262\" width=\"800\" height=\"528\" key=\"Vcs.Push.Dialog.v2/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606931427115\" />\n    <state x=\"594\" y=\"247\" width=\"800\" height=\"540\" key=\"Vcs.Push.Dialog.v2/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606587620558\" />\n    <state x=\"777\" y=\"441\" width=\"438\" height=\"182\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2\" timestamp=\"1606600115302\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"777\" y=\"441\" width=\"438\" height=\"182\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606600115302\" />\n    <state x=\"780\" y=\"431\" width=\"431\" height=\"182\" key=\"com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606587451497\" />\n    <state x=\"772\" y=\"338\" width=\"432\" height=\"429\" key=\"refactoring.ChangeSignatureDialog\" timestamp=\"1606597368165\">\n      <screen x=\"67\" y=\"27\" width=\"1853\" height=\"1053\" />\n    </state>\n    <state x=\"772\" y=\"338\" width=\"432\" height=\"429\" key=\"refactoring.ChangeSignatureDialog/67.27.1853.1053@67.27.1853.1053\" timestamp=\"1606597368165\" />\n    <state x=\"660\" y=\"249\" key=\"run.anything.popup\" timestamp=\"1606326937389\">\n      <screen x=\"72\" y=\"27\" width=\"1848\" height=\"1053\" />\n    </state>\n    <state x=\"660\" y=\"249\" key=\"run.anything.popup/72.27.1848.1053@72.27.1848.1053\" timestamp=\"1606326937389\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/workspace.xml	(revision 7e944e0769bd578ae789bdb5c2e5a932665338a2)
+++ .idea/workspace.xml	(date 1607259363974)
@@ -35,15 +35,14 @@
   <component name="ChangeListManager">
     <list default="true" id="29280ede-bff2-4e7a-8182-6ac519fa5ecf" name="Default Changelist" comment="Function reader  + order set by user">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Modules/AbstractExpectation.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/AbstractExpectation.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Modules/AbstractVariable.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/AbstractVariable.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Modules/CentralLimitThm.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/CentralLimitThm.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Modules/CentralLimitThm.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/CentralLimitThm.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Modules/FunctReader.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/FunctReader.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Modules/MonteCarloExpectation.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/MonteCarloExpectation.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Modules/MonteCarloExpectation.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/MonteCarloExpectation.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/Modules/NormalDist.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/NormalDist.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Modules/NormalDist.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/NormalDist.h" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Modules/UniformDist.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/UniformDist.cpp" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/Modules/UniformDist.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/UniformDist.h" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Modules/StatisticalMoment.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/StatisticalMoment.cpp" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Modules/StatisticalMoment.h" beforeDir="false" afterPath="$PROJECT_DIR$/Modules/StatisticalMoment.h" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/main.cpp" beforeDir="false" afterPath="$PROJECT_DIR$/main.cpp" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
@@ -129,18 +128,13 @@
         <option name="com.jetbrains.cidr.execution.CidrBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
       </method>
     </configuration>
-    <configuration default="true" type="GradleAppRunConfiguration" factoryName="Application" REDIRECT_INPUT="false" PASS_PARENT_ENVS_2="true">
-      <method v="2">
-        <option name="com.jetbrains.cidr.cpp.gradle.execution.GradleNativeBuildBeforeRunTaskProvider$BuildBeforeRunTask" enabled="true" />
-      </method>
-    </configuration>
     <list>
+      <item itemvalue="Google Test.Input_test" />
       <item itemvalue="CMake Application.Modules" />
       <item itemvalue="CMake Application.gtest" />
       <item itemvalue="CMake Application.gtest_main" />
       <item itemvalue="CMake Application.monte_carlo_run" />
       <item itemvalue="CMake Application.test" />
-      <item itemvalue="Google Test.Input_test" />
     </list>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
@@ -162,7 +156,7 @@
       <workItem from="1606993964012" duration="11123000" />
       <workItem from="1607021362227" duration="896000" />
       <workItem from="1607068909964" duration="5106000" />
-      <workItem from="1607174857880" duration="4795000" />
+      <workItem from="1607174857880" duration="15727000" />
     </task>
     <task id="LOCAL-00001" summary="Initial commit">
       <created>1606232472143</created>
@@ -241,7 +235,14 @@
       <option name="project" value="LOCAL" />
       <updated>1606931417118</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="Function reader  + order set by user">
+      <created>1607179681531</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1607179681531</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -292,6 +293,10 @@
       <screen x="72" y="27" width="1848" height="1053" />
     </state>
     <state x="536" y="98" width="916" height="898" key="CommitChangelistDialog2/72.27.1848.1053@72.27.1848.1053" timestamp="1606238144394" />
+    <state x="244" y="90" width="1482" height="872" key="DiffContextDialog" timestamp="1607179694782">
+      <screen x="67" y="27" width="1853" height="1053" />
+    </state>
+    <state x="244" y="90" width="1482" height="872" key="DiffContextDialog/67.27.1853.1053@67.27.1853.1053" timestamp="1607179694782" />
     <state x="813" y="311" width="424" height="496" key="FileChooserDialogImpl" timestamp="1606588201424">
       <screen x="72" y="27" width="1848" height="1053" />
     </state>
@@ -336,10 +341,10 @@
       <screen x="72" y="27" width="1848" height="1053" />
     </state>
     <state x="519" y="218" width="1016" height="742" key="SettingsEditor/72.27.1848.1053@72.27.1848.1053" timestamp="1606593961419" />
-    <state x="590" y="262" width="800" height="528" key="Vcs.Push.Dialog.v2" timestamp="1606931427115">
+    <state x="590" y="262" width="800" height="528" key="Vcs.Push.Dialog.v2" timestamp="1607179701178">
       <screen x="67" y="27" width="1853" height="1053" />
     </state>
-    <state x="590" y="262" width="800" height="528" key="Vcs.Push.Dialog.v2/67.27.1853.1053@67.27.1853.1053" timestamp="1606931427115" />
+    <state x="590" y="262" width="800" height="528" key="Vcs.Push.Dialog.v2/67.27.1853.1053@67.27.1853.1053" timestamp="1607179701178" />
     <state x="594" y="247" width="800" height="540" key="Vcs.Push.Dialog.v2/72.27.1848.1053@72.27.1848.1053" timestamp="1606587620558" />
     <state x="777" y="441" width="438" height="182" key="com.intellij.openapi.vcs.update.UpdateOrStatusOptionsDialogupdate-v2" timestamp="1606600115302">
       <screen x="67" y="27" width="1853" height="1053" />
